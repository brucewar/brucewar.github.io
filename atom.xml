<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>brucewar</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://brucewar.me/"/>
  <updated>2016-10-27T07:20:01.754Z</updated>
  <id>http://brucewar.me/</id>
  
  <author>
    <name>brucewar</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>D3.js（Draggable and Scalable Tree）</title>
    <link href="http://brucewar.me/2016/10/27/D3.js-Draggable%20and%20Scalable%20Tree/"/>
    <id>http://brucewar.me/2016/10/27/D3.js-Draggable and Scalable Tree/</id>
    <published>2016-10-27T05:32:26.000Z</published>
    <updated>2016-10-27T07:20:01.754Z</updated>
    
    <content type="html"><![CDATA[<p>因为最近手上有个小的需求，设计一个可缩放和可拖拽的树形结构，我便去研读了D3官网给的一个树形的例子。</p>
<h3 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h3><p>原本我以为理解了基本的选择器、元素操作、Enter、Exit就能去看实例的代码了，后来发现我错了，所以这里需要理解一下D3中布局（Layout）的概念。布局是D3中一个十分重要的概念，从布局衍生出很多图表。例如：饼状图（pie）、力导向图（force），树状图（tree）等等，基本实现了很多开源的可视化工具提供的图表。但是它又和很多可视化工具（如Echarts）有很大的不同。</p>
<p>相对于其它工具来说，D3较底层一点，所以初学者可能会觉得有点困难，但是一旦理解了D3布局的思想，使用起来，会比其它工具更加得心应手。首先，我阐释下D3和大部分可视化工具数据到图表的流程：</p>
<ul>
<li>大部分可视化工具：数据 =&gt; 封装好的绘图函数 =&gt; 图表</li>
<li>D3：数据 =&gt; Layout =&gt; 绘图所需的数据 =&gt; 绘制图形 =&gt; 图表</li>
</ul>
<p>可以看出，D3需要自己去绘制图形，但是可以通过布局函数获得绘图所需要的数据，坏处是对初学者是一个很大的考验，好处是它能帮助我们制作出更加精密的图形。</p>
<h3 id="树状图"><a href="#树状图" class="headerlink" title="树状图"></a>树状图</h3><p>回归正题，如何设计一个树形结构，我将从D3官网提供的示例代码分析。</p>
<p>页面代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>tree<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">	<span class="selector-tag">body</span>&#123;</div><div class="line">		<span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="selector-tag">svg</span>&#123;</div><div class="line">		<span class="attribute">background-color</span>: <span class="number">#eee</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="selector-class">.node</span> <span class="selector-tag">circle</span> &#123;</div><div class="line">	  <span class="attribute">cursor</span>: pointer;</div><div class="line">	  <span class="attribute">fill</span>: <span class="number">#fff</span>;</div><div class="line">	  <span class="attribute">stroke</span>: steelblue;</div><div class="line">	  <span class="attribute">stroke-width</span>: <span class="number">1.5px</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="selector-class">.node</span> <span class="selector-tag">text</span> &#123;</div><div class="line">	  <span class="attribute">font-size</span>: <span class="number">11px</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="selector-tag">path</span><span class="selector-class">.link</span> &#123;</div><div class="line">	  <span class="attribute">fill</span>: none;</div><div class="line">	  <span class="attribute">stroke</span>: <span class="number">#ccc</span>;</div><div class="line">	  <span class="attribute">stroke-width</span>: <span class="number">1.5px</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="selector-tag">g</span><span class="selector-class">.detail</span> <span class="selector-tag">rect</span>&#123;</div><div class="line">		<span class="attribute">fill</span>: <span class="number">#000</span>;</div><div class="line">		<span class="attribute">fill-opacity</span>: .<span class="number">6</span>;</div><div class="line">		<span class="attribute">rx</span>: <span class="number">5</span>;</div><div class="line">		<span class="attribute">ry</span>: <span class="number">5</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="selector-tag">g</span><span class="selector-class">.detail</span> <span class="selector-tag">text</span>&#123;</div><div class="line">		<span class="attribute">fill</span>: <span class="number">#fff</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"treeContainer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./dist/tree.bundle.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>因为D3示例代码是同步的形式读出整个树形数据结构，我对其进行了改造，模拟异步数据（async_city.json）。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">	<span class="string">"root"</span>: &#123;</div><div class="line">		<span class="string">"name"</span>: <span class="string">"中国"</span></div><div class="line">	&#125;,</div><div class="line">	<span class="string">"中国"</span>: &#123;</div><div class="line">		<span class="string">"name"</span>: <span class="string">"中国"</span>,</div><div class="line">		<span class="string">"children"</span>: [</div><div class="line">			&#123;<span class="string">"name"</span>: <span class="string">"浙江"</span>&#125;,</div><div class="line">			&#123;<span class="string">"name"</span>: <span class="string">"广西"</span>&#125;,</div><div class="line">			&#123;<span class="string">"name"</span>: <span class="string">"黑龙江"</span>&#125;,</div><div class="line">			&#123;<span class="string">"name"</span>: <span class="string">"新疆"</span>&#125;</div><div class="line">		]</div><div class="line">	&#125;,</div><div class="line">	<span class="string">"浙江"</span>: &#123;</div><div class="line">		<span class="string">"name"</span>: <span class="string">"浙江"</span>,</div><div class="line">		<span class="string">"children"</span>: [</div><div class="line">			&#123;<span class="string">"name"</span>: <span class="string">"杭州"</span>&#125;,</div><div class="line">			&#123;<span class="string">"name"</span>: <span class="string">"宁波"</span>&#125;,</div><div class="line">			&#123;<span class="string">"name"</span>:<span class="string">"温州"</span> &#125;,</div><div class="line">			&#123;<span class="string">"name"</span>:<span class="string">"绍兴"</span> &#125;</div><div class="line">		]</div><div class="line">	&#125;,</div><div class="line">	<span class="string">"广西"</span>: &#123;</div><div class="line">		<span class="string">"name"</span>: <span class="string">"广西"</span>,</div><div class="line">		<span class="string">"children"</span>: [</div><div class="line">			&#123;<span class="string">"name"</span>: <span class="string">"桂林"</span>&#125;,</div><div class="line">			&#123;<span class="string">"name"</span>: <span class="string">"南宁"</span>&#125;,</div><div class="line">			&#123;<span class="string">"name"</span>: <span class="string">"柳州"</span>&#125;,</div><div class="line">			&#123;<span class="string">"name"</span>: <span class="string">"防城港"</span>&#125;</div><div class="line">		]</div><div class="line">	&#125;,</div><div class="line">	<span class="string">"桂林"</span>: &#123;</div><div class="line">		<span class="string">"name"</span>: <span class="string">"桂林"</span>,</div><div class="line">		<span class="string">"children"</span>: [</div><div class="line">			&#123;<span class="string">"name"</span>:<span class="string">"秀峰区"</span>&#125;,</div><div class="line">			&#123;<span class="string">"name"</span>:<span class="string">"叠彩区"</span>&#125;,</div><div class="line">			&#123;<span class="string">"name"</span>:<span class="string">"象山区"</span>&#125;,</div><div class="line">			&#123;<span class="string">"name"</span>:<span class="string">"七星区"</span>&#125;</div><div class="line">		]</div><div class="line">	&#125;,</div><div class="line">	<span class="string">"黑龙江"</span>: &#123;</div><div class="line">			<span class="string">"name"</span>:<span class="string">"黑龙江"</span>,</div><div class="line">			<span class="string">"children"</span>:</div><div class="line">			[</div><div class="line">					&#123;<span class="string">"name"</span>:<span class="string">"哈尔滨"</span>&#125;,</div><div class="line">					&#123;<span class="string">"name"</span>:<span class="string">"齐齐哈尔"</span>&#125;,</div><div class="line">					&#123;<span class="string">"name"</span>:<span class="string">"牡丹江"</span>&#125;,</div><div class="line">					&#123;<span class="string">"name"</span>:<span class="string">"大庆"</span>&#125;</div><div class="line">			]</div><div class="line">	&#125;,</div><div class="line">	<span class="string">"新疆"</span> : &#123;</div><div class="line">			<span class="string">"name"</span>:<span class="string">"新疆"</span> ,</div><div class="line">			<span class="string">"children"</span>:</div><div class="line">			[</div><div class="line">					&#123;<span class="string">"name"</span>:<span class="string">"乌鲁木齐"</span>&#125;,</div><div class="line">					&#123;<span class="string">"name"</span>:<span class="string">"克拉玛依"</span>&#125;,</div><div class="line">					&#123;<span class="string">"name"</span>:<span class="string">"吐鲁番"</span>&#125;,</div><div class="line">					&#123;<span class="string">"name"</span>:<span class="string">"哈密"</span>&#125;</div><div class="line">			]</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="画布"><a href="#画布" class="headerlink" title="画布"></a>画布</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> margin = &#123;</div><div class="line">	<span class="attr">top</span>: <span class="number">20</span>,</div><div class="line">	<span class="attr">left</span>: <span class="number">50</span>,</div><div class="line">	<span class="attr">right</span>: <span class="number">50</span>,</div><div class="line">	<span class="attr">bottom</span>: <span class="number">20</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> width = $(<span class="built_in">document</span>).width(),</div><div class="line">	height = $(<span class="built_in">document</span>).height(),</div><div class="line">	i = <span class="number">0</span>,</div><div class="line">	limit = <span class="number">2</span>,</div><div class="line">	root;</div><div class="line"></div><div class="line">	<span class="comment">// draggable and scalable</span></div><div class="line">	<span class="keyword">var</span> zoomListener = d3.behavior.zoom().scaleExtent([<span class="number">0.1</span>, <span class="number">3</span>]).on(<span class="string">'zoom'</span>, zoom);</div><div class="line">	<span class="function"><span class="keyword">function</span> <span class="title">zoom</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		d3.select(<span class="string">'svg'</span>).select(<span class="string">'g'</span>).attr(<span class="string">'transform'</span>, <span class="string">'translate('</span> + d3.event.translate + <span class="string">')scale('</span> + d3.event.scale + <span class="string">')'</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">var</span> svg = d3.select(<span class="string">"#treeContainer"</span>).append(<span class="string">"svg"</span>)</div><div class="line">			.attr(<span class="string">"width"</span>, width - margin.left - margin.right)</div><div class="line">			.attr(<span class="string">"height"</span>, height - margin.top - margin.bottom)</div><div class="line">			.call(zoomListener)</div><div class="line">		.append(<span class="string">"g"</span>)</div><div class="line">			.attr(<span class="string">"transform"</span>, <span class="string">"translate("</span> + margin.left + <span class="string">","</span> + margin.top + <span class="string">")"</span>);</div></pre></td></tr></table></figure>
<h4 id="获取异步数据"><a href="#获取异步数据" class="headerlink" title="获取异步数据"></a>获取异步数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 异步获取数据</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params">sd, cb</span>)</span>&#123;</div><div class="line">	d3.json(<span class="string">'data/async_city.json'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, json</span>)</span>&#123;</div><div class="line">		<span class="comment">// 通过callback返回部分数据</span></div><div class="line">		cb &amp;&amp; cb(json[sd.name]);</div><div class="line">	&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="构造树"><a href="#构造树" class="headerlink" title="构造树"></a>构造树</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 获取树的root</span></div><div class="line">getData(&#123;<span class="attr">name</span>: <span class="string">'root'</span>&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">json</span>)</span>&#123;</div><div class="line">	root = json;</div><div class="line">	root.x0 = height / <span class="number">2</span>;</div><div class="line">	root.y0 = width / <span class="number">2</span>;</div><div class="line"></div><div class="line">	<span class="comment">// 初始化树根</span></div><div class="line">	update(root);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>从上面的代码可以看出构造树的核心代码就是这个update函数，下面以注释的形式深入理解树形的构造。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 新建一个树的布局</span></div><div class="line"><span class="keyword">var</span> tree = d3.layout.tree()</div><div class="line">		.size([height - margin.top - margin.bottom, width - margin.left - margin.right]);</div><div class="line"></div><div class="line"><span class="comment">// 因为默认的树布局是自上而下的，这里构建一个自左向右的树，故需要一个转换x和y坐标的函数</span></div><div class="line"><span class="keyword">var</span> diagonal = d3.svg.diagonal()</div><div class="line">		.projection(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> [d.y, d.x]; &#125;);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params">source</span>) </span>&#123;</div><div class="line">	<span class="keyword">var</span> duration = d3.event &amp;&amp; d3.event.altKey ? <span class="number">5000</span> : <span class="number">500</span>;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	* 这里实际上是通过tree的nodes函数获得树形结构的每个节点的数据，包括位置信息和深度</div><div class="line">	* 返回的数据结构如下：</div><div class="line">	* [&#123;depth: 0, name: "中国", children: [], x: 380, y: 0&#125;]</div><div class="line">	*/</div><div class="line">	<span class="keyword">var</span> nodes = tree.nodes(root).reverse();</div><div class="line"></div><div class="line">	<span class="comment">// 为了让当前节点居中，故更具当前节点的depth来计算各节点的y坐标（即横向位置）</span></div><div class="line">	<span class="keyword">var</span> srcDepth = source.depth;</div><div class="line">	nodes.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">		d.y = height / <span class="number">2</span> + <span class="number">180</span> * (d.depth - srcDepth);</div><div class="line">	&#125;);</div><div class="line"></div><div class="line">	<span class="comment">// Update the nodes…</span></div><div class="line">	<span class="keyword">var</span> node = svg.selectAll(<span class="string">"g.node"</span>)</div><div class="line">			.data(nodes, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.id || (d.id = ++i); &#125;);</div><div class="line"></div><div class="line">	<span class="comment">// Enter any new nodes at the parent's previous position.</span></div><div class="line">	<span class="keyword">var</span> nodeEnter = node.enter().append(<span class="string">"g"</span>)</div><div class="line">			.attr(<span class="string">"class"</span>, <span class="string">"node"</span>)</div><div class="line">			.attr(<span class="string">"transform"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> <span class="string">"translate("</span> + source.y0 + <span class="string">","</span> + source.x0 + <span class="string">")"</span>; &#125;)</div><div class="line">			.on(<span class="string">"click"</span>, click)</div><div class="line">			.on(<span class="string">'mouseover'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">				<span class="keyword">if</span>(d.name == <span class="string">'more'</span>) <span class="keyword">return</span>;</div><div class="line">				<span class="comment">// 鼠标hover某个节点时，显示一个详细信息的弹层</span></div><div class="line">				<span class="keyword">var</span> detail = d3.select(<span class="keyword">this</span>).append(<span class="string">'g'</span>)</div><div class="line">						.attr(<span class="string">'class'</span>, <span class="string">'detail'</span>)</div><div class="line">						.attr(<span class="string">'dx'</span>, d3.event.x)</div><div class="line">						.attr(<span class="string">'dy'</span>, d3.event.y + <span class="number">10</span>);</div><div class="line">				detail.append(<span class="string">'rect'</span>)</div><div class="line">						.attr(<span class="string">'width'</span>, <span class="number">100</span>)</div><div class="line">						.attr(<span class="string">'height'</span>, <span class="number">100</span>);</div><div class="line">				detail.append(<span class="string">'text'</span>)</div><div class="line">						.attr(<span class="string">'dx'</span>, <span class="string">'.35em'</span>)</div><div class="line">						.attr(<span class="string">'dy'</span>, <span class="string">'2em'</span>)</div><div class="line">						.attr(<span class="string">'text-anchor'</span>, <span class="string">'start'</span>)</div><div class="line">						.text(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">							<span class="keyword">return</span> <span class="string">'name: '</span> + d.name;</div><div class="line">						&#125;);</div><div class="line">			&#125;)</div><div class="line">			.on(<span class="string">'mousemove'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">				<span class="keyword">var</span> detail = d3.select(<span class="keyword">this</span>).select(<span class="string">'.detail'</span>);</div><div class="line">				detail.attr(<span class="string">'x'</span>, d3.event.x)</div><div class="line">						.attr(<span class="string">'y'</span>, d3.event.y);</div><div class="line">			&#125;)</div><div class="line">			.on(<span class="string">'mouseout'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">				<span class="keyword">if</span>(d.name == <span class="string">'more'</span>) <span class="keyword">return</span>;</div><div class="line">				d3.select(<span class="keyword">this</span>).select(<span class="string">'.detail'</span>).remove();</div><div class="line">			&#125;);</div><div class="line"></div><div class="line">	nodeEnter.append(<span class="string">"circle"</span>)</div><div class="line">			.attr(<span class="string">"r"</span>, <span class="number">1e-6</span>)</div><div class="line">			.style(<span class="string">"fill"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123; <span class="keyword">return</span> !d.isExpand ? <span class="string">"lightsteelblue"</span> : <span class="string">"#fff"</span>; &#125;);</div><div class="line"></div><div class="line">	nodeEnter.append(<span class="string">"text"</span>)</div><div class="line">			.attr(<span class="string">"x"</span>, <span class="number">-10</span>)</div><div class="line">			.attr(<span class="string">"dy"</span>, <span class="string">".35em"</span>)</div><div class="line">			.attr(<span class="string">"text-anchor"</span>, <span class="string">"end"</span>)</div><div class="line">			.text(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.name; &#125;)</div><div class="line">			.style(<span class="string">"fill-opacity"</span>, <span class="number">1e-6</span>);</div><div class="line"></div><div class="line"></div><div class="line">	<span class="comment">// Transition nodes to their new position.</span></div><div class="line">	<span class="keyword">var</span> nodeUpdate = node.transition()</div><div class="line">			.duration(duration)</div><div class="line">			.attr(<span class="string">"transform"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> <span class="string">"translate("</span> + d.y + <span class="string">","</span> + d.x + <span class="string">")"</span>; &#125;);</div><div class="line"></div><div class="line">	nodeUpdate.select(<span class="string">"circle"</span>)</div><div class="line">			.attr(<span class="string">"r"</span>, <span class="number">10</span>)</div><div class="line">			.style(<span class="string">"fill"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123; <span class="keyword">return</span> !d.isExpand ? <span class="string">"lightsteelblue"</span> : <span class="string">"#fff"</span>; &#125;);</div><div class="line"></div><div class="line">	nodeUpdate.select(<span class="string">"text"</span>)</div><div class="line">			.style(<span class="string">"fill-opacity"</span>, <span class="number">1</span>);</div><div class="line"></div><div class="line">	<span class="comment">// Transition exiting nodes to the parent's new position.</span></div><div class="line">	<span class="keyword">var</span> nodeExit = node.exit().transition()</div><div class="line">			.duration(duration)</div><div class="line">			.attr(<span class="string">"transform"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">				<span class="keyword">if</span>(d.name == <span class="string">'more'</span>) <span class="keyword">this</span>.remove();</div><div class="line">				<span class="keyword">return</span> <span class="string">"translate("</span> + source.y + <span class="string">","</span> + source.x + <span class="string">")"</span>;</div><div class="line">			&#125;)</div><div class="line">			.remove();</div><div class="line"></div><div class="line">	nodeExit.select(<span class="string">"circle"</span>)</div><div class="line">			.attr(<span class="string">"r"</span>, <span class="number">1e-6</span>);</div><div class="line"></div><div class="line">	nodeExit.select(<span class="string">"text"</span>)</div><div class="line">			.style(<span class="string">"fill-opacity"</span>, <span class="number">1e-6</span>);</div><div class="line"></div><div class="line">	<span class="comment">/** Update the links...</span></div><div class="line">	* tree.links方法获取连线节点之间的映射，返回的数据结构如下：</div><div class="line">	* [&#123;source: &#123;&#125;, target: &#123;&#125;&#125;]</div><div class="line">	*/</div><div class="line">	<span class="keyword">var</span> link = svg.selectAll(<span class="string">"path.link"</span>)</div><div class="line">			.data(tree.links(nodes), <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.target.id; &#125;);</div><div class="line"></div><div class="line">	<span class="comment">// Enter any new links at the parent's previous position.</span></div><div class="line">	link.enter().insert(<span class="string">"path"</span>, <span class="string">"g"</span>)</div><div class="line">			.attr(<span class="string">"class"</span>, <span class="string">"link"</span>)</div><div class="line">			.attr(<span class="string">"d"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">				<span class="keyword">var</span> o = &#123;<span class="attr">x</span>: source.x0, <span class="attr">y</span>: source.y0&#125;;</div><div class="line">				<span class="keyword">return</span> diagonal(&#123;<span class="attr">source</span>: o, <span class="attr">target</span>: o&#125;);</div><div class="line">			&#125;)</div><div class="line">		.transition()</div><div class="line">			.duration(duration)</div><div class="line">			.attr(<span class="string">"d"</span>, diagonal);</div><div class="line"></div><div class="line">	<span class="comment">// Transition links to their new position.</span></div><div class="line">	link.transition()</div><div class="line">			.duration(duration)</div><div class="line">			.attr(<span class="string">"d"</span>, diagonal);</div><div class="line"></div><div class="line">	<span class="comment">// Transition exiting nodes to the parent's new position.</span></div><div class="line">	link.exit().transition()</div><div class="line">			.duration(duration)</div><div class="line">			.attr(<span class="string">"d"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">				<span class="keyword">if</span>(d.target.name == <span class="string">'more'</span>) <span class="keyword">this</span>.remove();</div><div class="line">				<span class="keyword">var</span> o = &#123;<span class="attr">x</span>: source.x, <span class="attr">y</span>: source.y&#125;;</div><div class="line">				<span class="keyword">return</span> diagonal(&#123;<span class="attr">source</span>: o, <span class="attr">target</span>: o&#125;);</div><div class="line">			&#125;)</div><div class="line">			.remove();</div><div class="line"></div><div class="line">	<span class="comment">// Stash the old positions for transition.</span></div><div class="line">	<span class="comment">// 记录当前节点所在的位置，为node update提供位移动画</span></div><div class="line">	nodes.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">		d.x0 = d.x;</div><div class="line">		d.y0 = d.y;</div><div class="line">	&#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">collapse</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">	<span class="keyword">delete</span> d._children;</div><div class="line">	<span class="keyword">delete</span> d.isExpand;</div><div class="line">	<span class="keyword">delete</span> d.children;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">expand</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">	getData(&#123;<span class="attr">name</span>: d.name&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">json</span>)</span>&#123;</div><div class="line">		<span class="keyword">if</span>(json &amp;&amp; json.children)&#123;</div><div class="line">			<span class="comment">// 获取到此节点有子节点</span></div><div class="line">			d._children = json.children;</div><div class="line">			d.children = d._children.slice(<span class="number">0</span>, limit);</div><div class="line">			<span class="keyword">if</span>(d._children.length &gt; d.children.length)&#123;</div><div class="line">				d.children.push(&#123;<span class="string">'name'</span>: <span class="string">'more'</span>&#125;);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		d.isExpand = <span class="literal">true</span>;</div><div class="line">		update(d);</div><div class="line">	&#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 异步获取数据</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params">sd, cb</span>)</span>&#123;</div><div class="line">	d3.json(<span class="string">'data/async_city.json'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, json</span>)</span>&#123;</div><div class="line">		cb &amp;&amp; cb(json[sd.name]);</div><div class="line">	&#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">click</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(d.name == <span class="string">'more'</span>)&#123;</div><div class="line">		<span class="comment">// 点击更多</span></div><div class="line">		d.parent.children = d.parent._children.slice(<span class="number">0</span>, (d.parent.children.length - <span class="number">1</span>) + limit);</div><div class="line">		<span class="keyword">if</span>(d.parent._children.length &gt; d.parent.children.length)&#123;</div><div class="line">			d.parent.children.push(&#123;<span class="string">'name'</span>: <span class="string">'more'</span>&#125;);</div><div class="line">		&#125;</div><div class="line">		update(d.parent);</div><div class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(d.isExpand &amp;&amp; d.children)&#123;</div><div class="line">		<span class="comment">// 点击展开的节点</span></div><div class="line">		collapse(d);</div><div class="line">		update(d);</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">		<span class="comment">// 点击未展开的点</span></div><div class="line">		expand(d);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>可以从<a href="https://github.com/brucewar/practice-in-D3" target="_blank" rel="external">https://github.com/brucewar/practice-in-D3</a>获取示例代码</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为最近手上有个小的需求，设计一个可缩放和可拖拽的树形结构，我便去研读了D3官网给的一个树形的例子。&lt;/p&gt;
&lt;h3 id=&quot;布局（Layout）&quot;&gt;&lt;a href=&quot;#布局（Layout）&quot; class=&quot;headerlink&quot; title=&quot;布局（Layout）&quot;&gt;&lt;/
    
    </summary>
    
      <category term="D3.js" scheme="http://brucewar.me/categories/D3-js/"/>
    
    
      <category term="D3" scheme="http://brucewar.me/tags/D3/"/>
    
      <category term="树状图" scheme="http://brucewar.me/tags/%E6%A0%91%E7%8A%B6%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>D3.js（完整的柱状图）</title>
    <link href="http://brucewar.me/2016/10/25/D3.js-%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9F%B1%E7%8A%B6%E5%9B%BE/"/>
    <id>http://brucewar.me/2016/10/25/D3.js-完整的柱状图/</id>
    <published>2016-10-25T02:59:26.000Z</published>
    <updated>2016-10-27T06:18:29.403Z</updated>
    
    <content type="html"><![CDATA[<p>首先，我们先看一下最终的柱状图效果展示。如下图所示，一个完整的柱状图需要包含三个部分：矩形、文字、坐标轴。</p>
<p><img src="http://brucewar.qiniudn.com/chart.png" alt="柱状图"></p>
<h3 id="添加SVG画布"><a href="#添加SVG画布" class="headerlink" title="添加SVG画布"></a>添加SVG画布</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 画布大小</span></div><div class="line"><span class="keyword">var</span> width = <span class="number">400</span>,</div><div class="line">height = <span class="number">400</span>;</div><div class="line"></div><div class="line"><span class="comment">// 画布四个方向上的留白</span></div><div class="line"><span class="keyword">var</span> margin = &#123;</div><div class="line">	<span class="attr">top</span>: <span class="number">20</span>,</div><div class="line">	<span class="attr">right</span>: <span class="number">30</span>,</div><div class="line">	<span class="attr">bottom</span>: <span class="number">20</span>,</div><div class="line">	<span class="attr">left</span>: <span class="number">30</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> chart = d3.select(<span class="string">'.chart'</span>)</div><div class="line">.attr(<span class="string">'width'</span>, width)</div><div class="line">.attr(<span class="string">'height'</span>, height)</div><div class="line">.append(<span class="string">'g'</span>);</div></pre></td></tr></table></figure>
<h3 id="定义比例尺"><a href="#定义比例尺" class="headerlink" title="定义比例尺"></a>定义比例尺</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// define x,y point rule</span></div><div class="line"><span class="keyword">var</span> x = d3.scale.ordinal()</div><div class="line">.rangeRoundBands([<span class="number">0</span>, width - margin.left - margin.right]);</div><div class="line"><span class="keyword">var</span> y = d3.scale.linear()</div><div class="line">.range([height - margin.top - margin.bottom, <span class="number">0</span>]);</div></pre></td></tr></table></figure>
<h3 id="添加矩形及文字"><a href="#添加矩形及文字" class="headerlink" title="添加矩形及文字"></a>添加矩形及文字</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 矩形之间的空白</span></div><div class="line"><span class="keyword">var</span> barPadding = <span class="number">4</span>;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">* 这里用到了d3异步读取数据的接口csv</div><div class="line">* chart.csv的文件内容如下：</div><div class="line">* name,value</div><div class="line">* Locke,4</div><div class="line">* Reyes,8</div><div class="line">* Ford,15</div><div class="line">* Jarrah,16</div><div class="line">* Shephard,23</div><div class="line">* Kwon,42</div><div class="line">*/</div><div class="line">d3.csv(<span class="string">'data/chart.csv'</span>, type, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>)</span>&#123;</div><div class="line">	x.domain(data.map(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123; <span class="keyword">return</span> d.name; &#125;));</div><div class="line">	y.domain([<span class="number">0</span>, d3.max(data, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">		<span class="keyword">return</span> d.value;</div><div class="line">	&#125;)]);</div><div class="line"></div><div class="line">	<span class="comment">// append rect</span></div><div class="line">	chart.selectAll(<span class="string">'.bar'</span>)</div><div class="line">	.data(data)</div><div class="line">	.enter().append(<span class="string">'rect'</span>)</div><div class="line">	.attr(<span class="string">'class'</span>, <span class="string">'bar'</span>)</div><div class="line">	.attr(<span class="string">'transform'</span>, <span class="string">'translate('</span> + margin.left + <span class="string">','</span> + margin.top + <span class="string">')'</span>)</div><div class="line">	.attr(<span class="string">'x'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123; <span class="keyword">return</span> x(d.name) + barPadding / <span class="number">2</span>; &#125;)</div><div class="line">	.attr(<span class="string">'y'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123; <span class="keyword">return</span> y(d.value); &#125;)</div><div class="line">	.attr(<span class="string">'height'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123; <span class="keyword">return</span> height - margin.top - margin.bottom - y(d.value); &#125;)</div><div class="line">	.attr(<span class="string">'width'</span>, x.rangeBand() - barPadding);</div><div class="line"></div><div class="line">	<span class="comment">// append text</span></div><div class="line">	chart.selectAll(<span class="string">'.text'</span>)</div><div class="line">	.data(data)</div><div class="line">	.enter()</div><div class="line">	.append(<span class="string">'text'</span>)</div><div class="line">	.attr(<span class="string">'class'</span>, <span class="string">'text'</span>)</div><div class="line">	.attr(<span class="string">'transform'</span>, <span class="string">'translate('</span> + margin.left + <span class="string">','</span> + margin.top + <span class="string">')'</span>)</div><div class="line">	.attr(<span class="string">'x'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">		<span class="keyword">return</span> x(d.name) + barPadding / <span class="number">2</span>;</div><div class="line">	&#125;).attr(<span class="string">'y'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">		<span class="keyword">return</span> y(d.value);</div><div class="line">	&#125;).attr(<span class="string">'dx'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">return</span> (x.rangeBand() - barPadding) / <span class="number">2</span>;</div><div class="line">	&#125;).attr(<span class="string">'dy'</span>, <span class="number">20</span>)</div><div class="line">	.text(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">		<span class="keyword">return</span> d.value;</div><div class="line">	&#125;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">type</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">	d.value = +d.value;</div><div class="line">	<span class="keyword">return</span> d;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="定义并添加坐标轴"><a href="#定义并添加坐标轴" class="headerlink" title="定义并添加坐标轴"></a>定义并添加坐标轴</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// define axis</span></div><div class="line"><span class="keyword">var</span> xAxis = d3.svg.axis()</div><div class="line">.scale(x)</div><div class="line">.orient(<span class="string">'bottom'</span>);</div><div class="line"><span class="keyword">var</span> yAxis = d3.svg.axis()</div><div class="line">.scale(y)</div><div class="line">.orient(<span class="string">'left'</span>)</div><div class="line">.ticks(<span class="number">10</span>);	<span class="comment">//显示的刻度值个数</span></div><div class="line"></div><div class="line"><span class="comment">// append x axis</span></div><div class="line">chart.append(<span class="string">'g'</span>)</div><div class="line">.attr(<span class="string">'class'</span>, <span class="string">'x axis'</span>)</div><div class="line">.attr(<span class="string">'transform'</span>, <span class="string">'translate('</span> + margin.left + <span class="string">', '</span> + (height - margin.bottom) + <span class="string">')'</span>)</div><div class="line">.call(xAxis);</div><div class="line"></div><div class="line"><span class="comment">// append y axis</span></div><div class="line">chart.append(<span class="string">'g'</span>)</div><div class="line">.attr(<span class="string">'class'</span>, <span class="string">'y axis'</span>)</div><div class="line">.attr(<span class="string">'transform'</span>, <span class="string">'translate('</span> + margin.left + <span class="string">','</span> + margin.top + <span class="string">')'</span>)</div><div class="line">.call(yAxis)</div><div class="line">.append(<span class="string">'text'</span>)</div><div class="line">.attr(<span class="string">'transform'</span>, <span class="string">'rotate(-90)'</span>)</div><div class="line">.attr(<span class="string">'y'</span>, <span class="number">6</span>)</div><div class="line">.attr(<span class="string">'dy'</span>, <span class="string">'.71em'</span>)</div><div class="line">.style(<span class="string">'text-anchor'</span>, <span class="string">'end'</span>)</div><div class="line">.text(<span class="string">'value'</span>);</div></pre></td></tr></table></figure>
<blockquote>
<p>可以从<a href="https://github.com/brucewar/practice-in-D3" target="_blank" rel="external">https://github.com/brucewar/practice-in-D3</a>获取示例代码</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先，我们先看一下最终的柱状图效果展示。如下图所示，一个完整的柱状图需要包含三个部分：矩形、文字、坐标轴。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://brucewar.qiniudn.com/chart.png&quot; alt=&quot;柱状图&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;添加SV
    
    </summary>
    
      <category term="D3.js" scheme="http://brucewar.me/categories/D3-js/"/>
    
    
      <category term="D3" scheme="http://brucewar.me/tags/D3/"/>
    
      <category term="柱状图" scheme="http://brucewar.me/tags/%E6%9F%B1%E7%8A%B6%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>D3.js（入门篇）</title>
    <link href="http://brucewar.me/2016/10/24/D3.js-%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <id>http://brucewar.me/2016/10/24/D3.js-入门篇/</id>
    <published>2016-10-24T08:26:58.000Z</published>
    <updated>2016-10-25T03:00:41.325Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>D3.js（后面简称D3，官方首页<a href="https://d3js.org/" target="_blank" rel="external">https://d3js.org/</a>）是基于JavaScript开发的一套用于数据可视化工具，项目开源在GitHub，项目排名靠前。它提供了很多API，如DOM（<code>Document Object Model</code>）的一些操作，绘制图形等。截止本文发表时间，D3已更新到v4，v4在v3的基础上，有了很大的改变（因为v3只支持通过svg和dom构图，所以v4在v3的基础上增加了对Canvas的支持以及API的修改）,本文使用的版本为v3的API。</p>
<h4 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>D3.js Hello World<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://d3js.org/d3.v3.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>first text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>second text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>third text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line">		var p = d3.select('body').selectAll('p')</div><div class="line">		.attr('color', 'red')</div><div class="line">		.attr('font-size', '72px')</div><div class="line">		.text('brucewar');</div><div class="line">		<span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>上面代码展示了基本的DOM操作，有过jQuery开发经历的人会发现其语法和jQuery很相似，主要是以下两点：</p>
<ul>
<li>支持元素选择器</li>
<li>链式语法结构</li>
</ul>
<h5 id="插入元素"><a href="#插入元素" class="headerlink" title="插入元素"></a>插入元素</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 末尾插入p元素</span></div><div class="line">d3.select(<span class="string">'body'</span>).append(<span class="string">'p'</span>).text(<span class="string">'append new prograph'</span>);</div><div class="line"><span class="comment">// 在第一个p元素之前插入p</span></div><div class="line">d3.select(<span class="string">'p'</span>).insert(<span class="string">'p'</span>).text(<span class="string">'insert new prograph'</span>);</div></pre></td></tr></table></figure>
<h5 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d3.select(<span class="string">'p'</span>).remove();</div></pre></td></tr></table></figure>
<h4 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h4><p>在D3中，选择器通常和数据绑定一起使用，这里的<strong>数据绑定</strong>的意思是将DOM元素与数据进行绑定，当需要依靠数据操作元素会非常方便。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>];</div><div class="line">p.data(arr).text(<span class="function"><span class="keyword">function</span>(<span class="params">d, i</span>)</span>&#123;</div><div class="line">	<span class="comment">// d: 数据 i: 元素索引</span></div><div class="line">	<span class="keyword">return</span> d;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h4 id="绘制简单的横向柱状图"><a href="#绘制简单的横向柱状图" class="headerlink" title="绘制简单的横向柱状图"></a>绘制简单的横向柱状图</h4><ol>
<li><p>添加svg画布</p>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> width = <span class="number">300</span>;</div><div class="line"><span class="keyword">var</span> height = <span class="number">300</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> svg = d3.select(<span class="string">'body'</span>)</div><div class="line">.append(<span class="string">'svg'</span>)</div><div class="line">.attr(<span class="string">'width'</span>. width)</div><div class="line">.attr(<span class="string">'height'</span>, height);</div></pre></td></tr></table></figure>
</li>
<li><p>绘制矩形</p>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> data = [<span class="number">250</span>, <span class="number">210</span>, <span class="number">170</span>, <span class="number">130</span>, <span class="number">90</span>]; <span class="comment">// 表示矩形的宽度</span></div><div class="line"><span class="keyword">var</span> rectHeight = <span class="number">25</span>;</div><div class="line"></div><div class="line">svg.selectAll(<span class="string">'rect'</span>)</div><div class="line">.data(data)</div><div class="line">.enter()	<span class="comment">// 当元素个数不足数据个数时，自动补全</span></div><div class="line">.append(<span class="string">'rect'</span>)</div><div class="line">.attr(<span class="string">'x'</span>, <span class="number">20</span>)</div><div class="line">.attr(<span class="string">'y'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d, i</span>)</span>&#123;</div><div class="line">	<span class="keyword">return</span> i * rectHeight;</div><div class="line">&#125;)</div><div class="line">.attr(<span class="string">'width'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</div><div class="line">	<span class="keyword">return</span> d;</div><div class="line">&#125;)</div><div class="line">.attr(<span class="string">'height'</span>, rectHeight - <span class="number">2</span>)</div><div class="line">.attr(<span class="string">'fill'</span>, <span class="string">'steelblue'</span>);</div></pre></td></tr></table></figure>
<p> 从上面的代码可以看出当<code>data</code>中的数据大于画布的宽度时，绘制的矩形会超出画布，所以需要引入<em>比例尺</em>（Scale）的概念。比例尺的概念类似数学中的一元二次函数，有x和y两个未知数，当x的值确定时，y的值也就确定了，x范围被称为定义域，y的范围为值域，对应于D3比例尺中的domain和range。D3为我们提供了很多比例尺，这里主要讲这里柱状图所要使用的线性比例尺。</p>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> min = d3.min(data);</div><div class="line"><span class="keyword">var</span> max = d3.max(data);</div><div class="line"></div><div class="line"><span class="keyword">var</span> linear = d3.scale.linear()</div><div class="line">.domain([min, max])</div><div class="line">.range([<span class="number">0</span>, <span class="number">300</span>]);</div></pre></td></tr></table></figure>
</li>
<li><p>绘制坐标轴</p>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//数据</span></div><div class="line"><span class="keyword">var</span> dataset = [ <span class="number">2.5</span> , <span class="number">2.1</span> , <span class="number">1.7</span> , <span class="number">1.3</span> , <span class="number">0.9</span> ];</div><div class="line"><span class="comment">//定义比例尺</span></div><div class="line"><span class="keyword">var</span> linear = d3.scale.linear()</div><div class="line"> .domain([<span class="number">0</span>, d3.max(dataset)])</div><div class="line"> .range([<span class="number">0</span>, <span class="number">250</span>]);</div><div class="line"></div><div class="line"><span class="keyword">var</span> axisX = d3.svg.axis()</div><div class="line"> .scale(linear)      <span class="comment">//指定比例尺</span></div><div class="line"> .orient(<span class="string">"bottom"</span>)   <span class="comment">//指定刻度的方向</span></div><div class="line"> .ticks(<span class="number">7</span>);          <span class="comment">//指定刻度的数量</span></div></pre></td></tr></table></figure>
<p> 定义了坐标轴之后，只要在svg中添加一个分组元素，再将坐标轴的其他元素添加到分组即可。</p>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">svg.append(<span class="string">'g'</span>)</div><div class="line">.attr(<span class="string">'class'</span>, <span class="string">'axis'</span>)</div><div class="line">.attr(<span class="string">'transform'</span>, <span class="string">'translate(20, 130)'</span>)</div><div class="line">.call(axisX);</div></pre></td></tr></table></figure>
 <figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/** 修改坐标轴样式 */</span></div><div class="line"><span class="selector-class">.axis</span> <span class="selector-tag">path</span>,</div><div class="line"><span class="selector-class">.axis</span> <span class="selector-tag">line</span>&#123;</div><div class="line">	<span class="attribute">fill</span>: none;</div><div class="line">	<span class="attribute">stroke</span>: black;</div><div class="line">	<span class="attribute">shape-rendering</span>: crispEdges;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.axis</span> <span class="selector-tag">text</span>&#123;</div><div class="line">	<span class="attribute">font-family</span>: sans-serif;</div><div class="line">	<span class="attribute">font-size</span>: <span class="number">11px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;p&gt;D3.js（后面简称D3，官方首页&lt;a href=&quot;https://d3js.org/&quot; target=&quot;_blank&quot; rel=&quot;exte
    
    </summary>
    
      <category term="D3.js" scheme="http://brucewar.me/categories/D3-js/"/>
    
    
      <category term="D3" scheme="http://brucewar.me/tags/D3/"/>
    
      <category term="JavaScript" scheme="http://brucewar.me/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>答利器上的六个问题</title>
    <link href="http://brucewar.me/2016/09/29/%E7%AD%94%E5%88%A9%E5%99%A8%E4%B8%8A%E7%9A%84%E5%85%AD%E4%B8%AA%E9%97%AE%E9%A2%98/"/>
    <id>http://brucewar.me/2016/09/29/答利器上的六个问题/</id>
    <published>2016-09-29T08:18:27.000Z</published>
    <updated>2016-10-19T06:45:47.542Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7pumxs.com1.z0.glb.clouddn.com/IMG_1186.JPG" alt="brucewar"></p>
<h3 id="介绍一下你自己和所做的工作"><a href="#介绍一下你自己和所做的工作" class="headerlink" title="介绍一下你自己和所做的工作"></a>介绍一下你自己和所做的工作</h3><p>我叫王金龙，是一名初级（按照工作年限来说的话）Web前端开发，但是以开发经历来说，我至少应该算一名合格的前端攻城狮。目前在途牛旅游网工作（已经寻找到新的追求）。读书的时候，接触的东西比较少，心里所想唯有学习，所以也就没培养任何一样兴趣，偶尔会和同学一起踢踢球；工作的时候，才逐渐培养了一些兴趣爱好，如跳舞、唱歌等，跳舞是今年才培养起来的一个兴趣，但是因为工作的关系，基本没什么时间练舞，所以跳的非常非常一般。15年研究生毕业后，工作也有一年半了，而且公司是业务驱动开发，所以代码也写了不少，可是自身能力的提升却没看出来。</p>
<h3 id="你都在使用哪些硬件"><a href="#你都在使用哪些硬件" class="headerlink" title="你都在使用哪些硬件"></a>你都在使用哪些硬件</h3><p><img src="http://7pumxs.com1.z0.glb.clouddn.com/keycool.jpg" alt="keycool红轴"></p>
<p>这款机械键盘是工作没多久之后买的。话说，当时看到同组的一位老程序员（简称斌哥，后来他们组从我们部门分出去啦）用的机械键盘，黑色键帽配上彩虹键帽，觉得很好看，所以一时冲动想买一把机械键盘。</p>
<blockquote>
<p>做什么事都要过一下脑子</p>
</blockquote>
<p>上面这句话，印象很深刻，因为我对机械键盘的知识一片空白，所以必须通过各方面的了解，首先从百度百科词条<a href="http://baike.baidu.com/link?url=sKWDdw44eHxUdTb40AbNYLSzOgKJx7xB-FN4uucHCr_FvNreuWYWlgjwDCULDpM4hje9YDkS_8jZwazXiRJl3O-nJ1AaP_pZDoFOw_X4uBOVoSoHaFHOI5pV2SWOq7hn" target="_blank" rel="external">机械键盘</a>学习了基本的知识，然后去问答网站（知乎）关注了话题<em>机械键盘</em>，发现此话题下，有很多问题是“程序员男朋友生日，想送机械键盘，有推荐的吗？”。额！！！被各种虐，心想为啥没有妹子送我。不过，还是有很多人推荐了不错的机械键盘。个人感觉很喜欢<strong>Filco圣手二代</strong>，但是迫于经济能力有限，最终还是买了一把国产的红轴，用起来真的很舒服（PS：好多同事试玩后都觉得不错）。</p>
<p><img src="http://7pumxs.com1.z0.glb.clouddn.com/akg.jpg" alt="AKG K450"></p>
<blockquote>
<p>舞蹈配上音乐之后，才有了灵魂</p>
</blockquote>
<p>如果一个舞者在没有背景乐的环境下舞动自己的身体，非专业观者可能会觉得看不懂，专业的人也只能从专业技巧上加以评价。有了音乐后，舞者会随着音乐的轻重缓急表达自己的情绪，这才有了舞魂。<br>程序员写代码时的手指就如同这舞者，在键盘这个舞台上表演，配合音乐的节奏，程序便有了它的灵魂（PS：我写程序时听的歌单<a href="http://music.163.com/#/m/playlist?id=159311553&amp;userid=85782250" target="_blank" rel="external">dance</a>）。AKG的这个经典款的耳机是<strong>昊哥</strong>推荐的，性价比非常高（非广告）。</p>
<p><img src="http://7pumxs.com1.z0.glb.clouddn.com/samsung.jpg" alt="三星S24D360HL"></p>
<p>显示器没什么可以说的，做为Web前端开发，两个显示器是必备的，一个放IDE，一个放浏览器，对于开发效率有非常大的提升。</p>
<h3 id="软件呢"><a href="#软件呢" class="headerlink" title="软件呢"></a>软件呢</h3><p>作为Linux的拥护者，必须向大家推荐Vim编辑器，我觉得它能让你脱离不必要的鼠标操作，大大提高工作效率，很惭愧，Vim新手阶段，用的不是很熟，只了解一些简单的编辑命令。顺带安利一款Chrome插件<a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb" target="_blank" rel="external">Vimium</a>（用Vim命令操作浏览器环境）。</p>
<h3 id="你最理想的工作环境是什么"><a href="#你最理想的工作环境是什么" class="headerlink" title="你最理想的工作环境是什么"></a>你最理想的工作环境是什么</h3><p>大桌子（圆弧型），两台显示器，一台笔记本，网络一定要好（自带翻墙，Youtube 1080P不卡顿），绿植围绕，周围坐着谦虚耐心的牛人，大家一起干着一件有意义（改变世界，哈哈，这个太大）的事。</p>
<h3 id="你平时获得工作灵感的方式有哪些"><a href="#你平时获得工作灵感的方式有哪些" class="headerlink" title="你平时获得工作灵感的方式有哪些"></a>你平时获得工作灵感的方式有哪些</h3><p>逛各种网站，知乎，简书等；玩各种流行的APP，微信，Instagram等，任何一个好的产品，自有它的独特的一面，我觉得作为前端开发，也需要有一些设计的想法，我开发过的项目中都曾借鉴过这些应用。</p>
<h3 id="推荐一件生活中的利器给大家"><a href="#推荐一件生活中的利器给大家" class="headerlink" title="推荐一件生活中的利器给大家"></a>推荐一件生活中的利器给大家</h3><p>VPN，强烈推荐我用的这款，但是这里不方便贴链接，有需要的私信我。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7pumxs.com1.z0.glb.clouddn.com/IMG_1186.JPG&quot; alt=&quot;brucewar&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;介绍一下你自己和所做的工作&quot;&gt;&lt;a href=&quot;#介绍一下你自己和所做的工作&quot; class=&quot;
    
    </summary>
    
    
      <category term="利器" scheme="http://brucewar.me/tags/%E5%88%A9%E5%99%A8/"/>
    
  </entry>
  
</feed>
